{
  "name": "impromptu",
  "displayName": "Impromptu",
  "description": "Write prompts for AI LLM from your files",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.101.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "impromptu-view-container",
          "title": "Impromptu",
          "icon": "resources/icon.svg"
        }
      ]
    },
    "views": {
      "impromptu-view-container": [
        {
          "id": "impromptu-file-tree",
          "name": "Project Files",
          "icon": "resources/icon.svg"
        },
        {
          "id": "impromptu-actions",
          "name": "Actions",
          "icon": "resources/icon.svg",
          "type": "webview"
        }
      ]
    },
    "commands": [
      {
        "command": "impromptu.openPrepend",
        "title": "Open .prepend.md"
      },
      {
        "command": "impromptu.openAppend",
        "title": "Open .append.md"
      },
      {
        "command": "impromptu.generatePrompt",
        "title": "Generate Prompt"
      },
      {
        "command": "impromptu.refresh",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "impromptu.clearSelection",
        "title": "Clear Selection",
        "icon": "$(clear-all)"
      },
      {
        "command": "impromptu.selectAll",
        "title": "Select All",
        "icon": "$(check-all)"
      },
      {
        "command": "impromptu.addFromContext",
        "title": "Add to Impromptu Prompt"
      },
      {
        "command": "impromptu.openSettings",
        "title": "Open Impromptu Settings",
        "icon": "$(settings-gear)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "impromptu.selectAll",
          "when": "view == impromptu-file-tree",
          "group": "navigation"
        },
        {
          "command": "impromptu.clearSelection",
          "when": "view == impromptu-file-tree",
          "group": "navigation"
        },
        {
          "command": "impromptu.refresh",
          "when": "view == impromptu-file-tree",
          "group": "navigation"
        },
        {
          "command": "impromptu.openSettings",
          "when": "view == impromptu-actions",
          "group": "navigation"
        }
      ],
      "explorer/context": [
        {
          "command": "impromptu.addFromContext",
          "group": "7_modification"
        }
      ],
      "editor/title/context": [
        {
          "command": "impromptu.addFromContext",
          "group": "7_modification"
        }
      ],
      "editor/context": [
        {
          "command": "impromptu.addFromContext",
          "group": "7_modification",
          "when": "resourceScheme == file"
        }
      ]
    },
    "configuration": {
      "title": "Impromptu",
      "properties": {
        "impromptu.projectStructureHeader": {
          "type": "string",
          "default": "--- Project Structure ---",
          "description": "The header text to display above the ASCII project structure tree in the generated prompt."
        },
        "impromptu.startOfFilesHeader": {
          "type": "string",
          "default": "--- Start of Files ---",
          "description": "Optional header text to insert before the content of the first selected file."
        },
        "impromptu.fileContentTemplate": {
          "type": "string",
          "default": "--- Start of {filePath} ---\n\n{fileContent}\n\n--- End of {filePath} ---",
          "description": "The template for wrapping each selected file's content. Use {filePath} and {fileContent} as placeholders.",
          "editPresentation": "multilineText",
          "pattern": "[\\s\\S]*\\{filePath\\}[\\s\\S]*\\{fileContent\\}[\\s\\S]*|[\\s\\S]*\\{fileContent\\}[\\s\\S]*\\{filePath\\}[\\s\\S]*",
          "patternErrorMessage": "Template must include both {filePath} and {fileContent} placeholders."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run package",
    "compile": "yarn run build:webview && webpack",
    "watch": "yarn run watch:webview & webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "yarn run compile-tests && yarn run compile && yarn run lint",
    "lint": "eslint src",
    "test": "vscode-test",
    "build:webview": "cd web && yarn install --frozen-lockfile && yarn run build",
    "watch:webview": "cd web && yarn install --frozen-lockfile && yarn run start"
  },
  "devDependencies": {
    "@types/vscode": "^1.101.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "24.0.3",
    "@typescript-eslint/eslint-plugin": "^8.34.1",
    "@typescript-eslint/parser": "^8.34.1",
    "eslint": "^9.29.0",
    "typescript": "^5.8.3",
    "ts-loader": "^9.5.2",
    "webpack": "^5.99.9",
    "webpack-cli": "^6.0.1",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2",
    "ignore": "^7.0.5"
  }
}
